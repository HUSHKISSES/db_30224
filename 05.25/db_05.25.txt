select bookname
from book b1
where
	((select count(b1.bookid)
	from book b, orders o
	where b.bookid=o.bookid
		and b1.bookid=b.bookid)
		>= 0.3*(select count(*) from customer));

insert into book(bookid, bookname, publisher, price)
values(11, '파이썬으로 자동화하기', '한빛아카데미', 30000);

delete from book where publisher like '오렌지미디어';

update book set publisher = '한빛미디어' 
where publisher = '한빛아카데미';

create table bookcompany(
	name varchar2(20),
	address varchar2(30),
	begin date
);
desc bookcompany;

alter table bookcompany 
add webaddress varchar2(40);
desc bookcompany;

insert into bookcompany(name, address, begin, webaddress)
values('한빛아카데미', '서울시 마포구', 1993-01-01, 'http://hanblit.co.kr');
select * from bookcompany;

-----------------------------------------------------------------------------

CREATE TABLE Theater (
theaterid 	NUMBER,
theatername 	VARCHAR2(20),
location		VARCHAR2(10),
PRIMARY KEY(theaterid)
);

CREATE TABLE Cust (
custid 	NUMBER PRIMARY KEY,
name 	VARCHAR2(20),
address 	VARCHAR2(50),
);

CREATE TABLE Room (
theaterid 	NUMBER PRIMARY KEY,
roomid 		NUMBER NOT NULL,
moviename 	VARCHAR2(20),
price 		NUMBER,
seat 		NUMBER,
FOREIGN KEY(theaterid) REFERENCES Theater(theaterid) ON DELETE CASCADE
FOREIGN KEY(theaterid) REFERENCES Reservation(theaterid) ON DELETE CASCADE
);

CREATE TABLE Reservation (
theaterid 	NUMBER,
roomid 		NUMBER,
custid 		NUMBER,
seatnum 		NUMBER,
date		DATE,
PRIMARY KEY(theaterid, roomid, custid, seatnum)
FOREIGN KEY(theaterid) REFERENCES Theater(theaterid) ON DELETE CASCADE
FOREIGN KEY(theaterid) REFERENCES Table(theaterid) ON DELETE CASCADE
FOREIGN KEY(roomid) REFERENCES Room(roomid) ON DELETE CASCADE
FOREIGN KEY(custid) REFERENCES Cust(custid) ON DELETE CASCADE
);

FOREIGN KEY(custid) REFERENCES Customer(custid) ON DELETE CASCADE,
FOREIGN KEY(bookid) REFERENCES Book(bookid) ON DELETE CASCADE